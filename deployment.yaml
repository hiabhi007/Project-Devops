apiVersion: apps/v1
kind: Deployment
metadata:
  name: nodejs-rest-api
  labels:
    app: nodejs-rest-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-rest-api
  template:
    metadata:
      labels:
        app: nodejs-rest-api
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9100"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: nodejs-rest-api
          image: bhatta007/myapp:b99cfa1ac0bcceaaa5a2509e2bc69def7b2b4543
          ports:
            - containerPort: 4000
          env:
            - name: PORT
              value: "4000"
            # - name: USERNAME
            #   valueFrom:
            #     secretKeyRef:
            #       name: myapp-secret
            #       key: username
            # - name: PASSWORD
            #   valueFrom:
            #     secretKeyRef:
            #       name: myapp-secret
            #       key: password
        # - name: prometheus-sidecar
        #   image: gcr.io/google-containers/prometheus-to-sd:v0.5.0
        #   command:
        #     - /monitor
        #   args:
        #     - --source=nodejs:http://localhost:4000/metrics
        #     - --stackdriver-prefix=custom.googleapis.com
        #     - --pod-id=$(POD_NAME)
        #     - --namespace-id=$(POD_NAMESPACE)
        #   env:
        #     - name: POD_NAME
        #       valueFrom:
        #         fieldRef:
        #           fieldPath: metadata.name
        #     - name: POD_NAMESPACE
        #       valueFrom:
        #         fieldRef:
        #           fieldPath: metadata.namespace
        #   ports:
        #     - containerPort: 9100